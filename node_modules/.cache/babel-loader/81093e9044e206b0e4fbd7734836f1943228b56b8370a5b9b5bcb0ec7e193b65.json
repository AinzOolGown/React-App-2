{"ast":null,"code":"import React,{Component}from'react';import{DropdownButton,Dropdown}from'react-bootstrap';import List from'./List';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";class FilteredList extends Component{constructor(props){super(props);this.onSearch=event=>{this.setState({search:event.target.value.trim().toLowerCase()});};this.onSelectType=type=>{this.setState({type});};this.filterItem=item=>{return item.name.toLowerCase().includes(this.state.search)&&(this.state.type===\"All\"||item.type===this.state.type);};this.state={search:\"\",type:\"All\"};}/* TODO: Add an event handling method for when an item in dropdown is selected\r\n\tPer the DropdownButton documentation, this function should take in an eventKey and event\r\n\t*/render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search\",onChange:this.onSearch}),/*#__PURE__*/_jsxs(DropdownButton,{title:\"Select Type\",id:\"dropdown-basic-button\",children:[/*#__PURE__*/_jsx(Dropdown.Item,{onClick:()=>this.onSelectType(\"All\"),children:\"All\"}),/*#__PURE__*/_jsx(Dropdown.Item,{onClick:()=>this.onSelectType(\"Fruit\"),children:\"Fruit\"}),/*#__PURE__*/_jsx(Dropdown.Item,{onClick:()=>this.onSelectType(\"Vegetable\"),children:\"Vegetable\"})]}),/*#__PURE__*/_jsx(List,{items:this.props.items.filter(this.filterItem)})]});}}export default FilteredList;","map":{"version":3,"names":["React","Component","DropdownButton","Dropdown","List","jsx","_jsx","jsxs","_jsxs","FilteredList","constructor","props","onSearch","event","setState","search","target","value","trim","toLowerCase","onSelectType","type","filterItem","item","name","includes","state","render","children","placeholder","onChange","title","id","Item","onClick","items","filter"],"sources":["C:/Users/Guest1/Documents/app-part-two/src/FilteredList.jsx"],"sourcesContent":["import React, { Component } from 'react'; \r\nimport {DropdownButton, Dropdown} from 'react-bootstrap' ; \r\nimport List from './List';\r\n\r\nclass FilteredList extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsearch: \"\",\r\n\t\t\ttype: \"All\"\r\n\t\t};\r\n\t}\r\n\t\r\n\tonSearch = (event) => {\r\n        this.setState({ search: event.target.value.trim().toLowerCase() });\r\n    }\r\n\r\n    onSelectType = (type) => {\r\n        this.setState({ type });\r\n    }\r\n\r\n\tfilterItem = (item) => {\r\n\t\treturn item.name.toLowerCase().includes(this.state.search) &&\r\n               (this.state.type === \"All\" || item.type === this.state.type);\r\n\t}\r\n\t/* TODO: Add an event handling method for when an item in dropdown is selected\r\n\tPer the DropdownButton documentation, this function should take in an eventKey and event\r\n\t*/\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n                <input type=\"text\" placeholder=\"Search\" onChange={this.onSearch} />\r\n                <DropdownButton title=\"Select Type\" id=\"dropdown-basic-button\">\r\n                    <Dropdown.Item onClick={() => this.onSelectType(\"All\")}>All</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => this.onSelectType(\"Fruit\")}>Fruit</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => this.onSelectType(\"Vegetable\")}>Vegetable</Dropdown.Item>\r\n                </DropdownButton>\r\n                <List items={this.props.items.filter(this.filterItem)} />\r\n            </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FilteredList;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAAQC,cAAc,CAAEC,QAAQ,KAAO,iBAAiB,CACxD,MAAO,CAAAC,IAAI,KAAM,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,YAAY,QAAS,CAAAR,SAAU,CACpCS,WAAWA,CAACC,KAAK,CAAE,CAClB,KAAK,CAACA,KAAK,CAAC,CAAC,KAOdC,QAAQ,CAAIC,KAAK,EAAK,CACf,IAAI,CAACC,QAAQ,CAAC,CAAEC,MAAM,CAAEF,KAAK,CAACG,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAE,CAAC,CAAC,CACtE,CAAC,MAEDC,YAAY,CAAIC,IAAI,EAAK,CACrB,IAAI,CAACP,QAAQ,CAAC,CAAEO,IAAK,CAAC,CAAC,CAC3B,CAAC,MAEJC,UAAU,CAAIC,IAAI,EAAK,CACtB,MAAO,CAAAA,IAAI,CAACC,IAAI,CAACL,WAAW,CAAC,CAAC,CAACM,QAAQ,CAAC,IAAI,CAACC,KAAK,CAACX,MAAM,CAAC,GAC5C,IAAI,CAACW,KAAK,CAACL,IAAI,GAAK,KAAK,EAAIE,IAAI,CAACF,IAAI,GAAK,IAAI,CAACK,KAAK,CAACL,IAAI,CAAC,CAC1E,CAAC,CAjBA,IAAI,CAACK,KAAK,CAAG,CACZX,MAAM,CAAE,EAAE,CACVM,IAAI,CAAE,KACP,CAAC,CACF,CAcA;AACD;AACA,GACCM,MAAMA,CAAA,CAAG,CACR,mBACCnB,KAAA,QAAAoB,QAAA,eACatB,IAAA,UAAOe,IAAI,CAAC,MAAM,CAACQ,WAAW,CAAC,QAAQ,CAACC,QAAQ,CAAE,IAAI,CAAClB,QAAS,CAAE,CAAC,cACnEJ,KAAA,CAACN,cAAc,EAAC6B,KAAK,CAAC,aAAa,CAACC,EAAE,CAAC,uBAAuB,CAAAJ,QAAA,eAC1DtB,IAAA,CAACH,QAAQ,CAAC8B,IAAI,EAACC,OAAO,CAAEA,CAAA,GAAM,IAAI,CAACd,YAAY,CAAC,KAAK,CAAE,CAAAQ,QAAA,CAAC,KAAG,CAAe,CAAC,cAC3EtB,IAAA,CAACH,QAAQ,CAAC8B,IAAI,EAACC,OAAO,CAAEA,CAAA,GAAM,IAAI,CAACd,YAAY,CAAC,OAAO,CAAE,CAAAQ,QAAA,CAAC,OAAK,CAAe,CAAC,cAC/EtB,IAAA,CAACH,QAAQ,CAAC8B,IAAI,EAACC,OAAO,CAAEA,CAAA,GAAM,IAAI,CAACd,YAAY,CAAC,WAAW,CAAE,CAAAQ,QAAA,CAAC,WAAS,CAAe,CAAC,EAC3E,CAAC,cACjBtB,IAAA,CAACF,IAAI,EAAC+B,KAAK,CAAE,IAAI,CAACxB,KAAK,CAACwB,KAAK,CAACC,MAAM,CAAC,IAAI,CAACd,UAAU,CAAE,CAAE,CAAC,EACxD,CAAC,CAEjB,CACD,CAEA,cAAe,CAAAb,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}